@charset "UTF-8";
/**
 * Foundation for Sites by ZURB
 * Version 6.3.1
 * foundation.zurb.com
 * Licensed under MIT Open Source
 */
body {
  font-size: 14px;
  color: #666;
  line-height: 30px;
  font-family: "Open Sans", sans-serif;
  line-height: 1.7;
  font-size: 100%;
  color: #666; }
  body h1, body h2, body h3, body h4, body h5, body h6 {
    font-weight: 600;
    color: #6FB96A; }
  body h2 a, body h3 a, body h4 a,
  body h2 a:visited, body h3 a:visited, body h4 a:visited {
    color: #6FB96A; }
    body h2 a:link, body h2 a:visited, body h3 a:link, body h3 a:visited, body h4 a:link, body h4 a:visited,
    body h2 a:visited:link,
    body h2 a:visited:visited, body h3 a:visited:link, body h3 a:visited:visited, body h4 a:visited:link, body h4 a:visited:visited {
      text-decoration: none; }
    body h2 a:hover, body h2 a:focus, body h3 a:hover, body h3 a:focus, body h4 a:hover, body h4 a:focus,
    body h2 a:visited:hover,
    body h2 a:visited:focus, body h3 a:visited:hover, body h3 a:visited:focus, body h4 a:visited:hover, body h4 a:visited:focus {
      text-decoration: underline; }
  body h2 {
    font-size: 20px;
    line-height: 30px; }
  body h3 {
    font-size: 15px;
    line-height: 20px;
    margin-bottom: 10px;
    text-transform: uppercase; }
  body p {
    color: #666;
    font-size: 14px;
    line-height: 26px; }
  body li {
    color: #666;
    font-size: 14px;
    line-height: 24px; }
  body section.featured {
    font-size: 18px;
    line-height: 28px;
    margin-bottom: 45px; }
  body section.featured h2 strong {
    font-weight: bold; }
  body legend.over-header {
    color: #14694d;
    font-size: 11px;
    font-weight: bold;
    letter-spacing: 6px;
    line-height: 18px;
    text-transform: uppercase; }
  @media print, screen and (min-width: 47.9375em) {
    body p, body li {
      color: #666;
      font-size: 16px; }
    body p, body li {
      line-height: 30px; }
    body h2 {
      font-size: 24px; }
    body h3, body h4 {
      font-size: 16px;
      line-height: 22px; }
    body section.featured {
      font-size: 22px;
      line-height: 34px; }
    body legend.over-header {
      font-size: 12px;
      line-height: 30px; } }
  body a {
    color: #007fad; }
    body a:link, body a:visited {
      text-decoration: none; }
    body a:hover, body a:focus {
      text-decoration: underline; }
  body a:visited {
    color: #007fad; }
  body ul {
    padding: 0;
    margin: 2em 0; }
  body ul li {
    margin: 0 0 15px;
    padding: 0 0 0 25px;
    position: relative;
    list-style: none; }
  body ul li ul {
    margin: 1em 0; }
  body ul li::before {
    content: '·';
    position: absolute;
    left: 0;
    top: 0;
    display: block;
    font-size: 32px; }
  body ul li li::before {
    content: '○';
    font-size: 16px; }
  body ol {
    padding: 0;
    margin: 2em 0 2em 20px; }
  body ol li {
    margin: 0 0 15px;
    padding: 0 0 0 10px;
    position: relative; }
  body h2 {
    margin-top: 2em; }
  body h2:first-child {
    margin-top: 0; }
  body h3 {
    margin-top: 2em; }
  body h3 + p {
    margin-top: 10px; }
  body blockquote {
    margin: 2em 0; }
  body blockquote q {
    font-size: 20px;
    font-style: italic;
    line-height: 34px;
    color: #007fad;
    font-weight: 300; }
  body blockquote footer {
    font-size: 12px;
    font-weight: 400;
    line-height: 20px; }
  body img {
    max-width: 100%;
    height: auto; }
  body .media-image {
    margin: 3em auto;
    text-align: center; }
  body .media-two-images {
    position: relative;
    overflow: hidden;
    margin: 3em auto; }
    body .media-two-images .field--name-field-image-2 {
      float: left;
      -webkit-box-sizing: border-box;
              box-sizing: border-box;
      width: 33.3333%; }
    body .media-two-images .field--name-field-image {
      float: left;
      -webkit-box-sizing: border-box;
              box-sizing: border-box;
      width: 66.6666%; }
    body .media-two-images ::after {
      content: '';
      position: absolute;
      background: #fff;
      width: 1%;
      left: 66%;
      top: 0;
      bottom: 0;
      z-index: 1; }
  body table {
    width: 100%;
    border-collapse: collapse;
    border: 1px solid #14694d;
    margin: 3em 0; }
  body th {
    border: 1px solid #fff;
    border-top: #14694d;
    border-bottom: #14694d;
    padding: 1.5% 3%;
    background: #14694d;
    font-weight: 600;
    color: #fff; }
  body th:first-child {
    border-left: #14694d;
    border-right: none; }
  body th:last-child {
    border-right: #14694d; }
  body table tr:nth-child(n+2) th {
    border-top: 1px solid #fff; }
  body td {
    font-size: 14px;
    border: 1px solid #14694d;
    padding: 1.5% 3%; }
  body td header {
    display: none; }
  @media print, screen and (min-width: 47.9375em) {
    body blockquote {
      margin: 2.5em 0;
      padding-left: 40px; }
    body blockquote q {
      font-size: 24px;
      line-height: 40px; }
    body blockquote footer {
      font-size: 14px;
      line-height: 30px; } }
  @media print, screen and (min-width: 64em) {
    body .media-two-images,
    body .media-image {
      margin: 4em -100px; } }

a, a:visited {
  color: #14694d; }

.cke_widget_wrapper {
  background: repeating-linear-gradient(45deg, #fff, #fff 10px, #FFF4EA 10px, #FFF4EA 20px); }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
